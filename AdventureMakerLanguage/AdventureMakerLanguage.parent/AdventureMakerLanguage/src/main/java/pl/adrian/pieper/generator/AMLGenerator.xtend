/*
 * generated by Xtext 2.9.2
 */
package pl.adrian.pieper.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import pl.adrian.pieper.aML.Monster
import pl.adrian.pieper.aML.Item
import sun.security.x509.KeyIdentifier
import java.util.Arrays
import java.util.List
import pl.adrian.pieper.generator.skill.SkillGenerator
import pl.adrian.pieper.generator.adventure.AdventureGenerator
import pl.adrian.pieper.generator.start.AdventuresOnStartGenerator

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class AMLGenerator extends AbstractGenerator {

    public static final String MAIN_PACKAGE = "pl.aml"
    public static final String IMPL_PACKAGE = "pl.aml.impl"

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {

        resource.allContents
        .filter(typeof(Item))
        .map[name]
        .forEach[name |  fsa.generateFile(name + '.txt', name)]

        Arrays.asList(
            new OpponentTypeClassGenerator(IMPL_PACKAGE+".opponent"),
            new PlaceGenerator(IMPL_PACKAGE+".location"),
            new ItemGenerator(IMPL_PACKAGE+".item"),
            new SkillGenerator(IMPL_PACKAGE+".character"),
            new AdventureGenerator(IMPL_PACKAGE+".adventure"),
            new AdventuresOnStartGenerator(IMPL_PACKAGE+".start")
        ).forEach[ doGenerate("java", resource, fsa, context) ]
    }
}
